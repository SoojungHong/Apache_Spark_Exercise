Tip 

1. run Scala jar application in Spark with PI example 

Follow these steps to run the Spark Pi example:

Log on as a user with Hadoop Distributed File System (HDFS) access: for example, your spark user, if you defined one, or hdfs.

When the job runs, the library is uploaded into HDFS, so the user running the job needs permission to write to HDFS.

Navigate to a node with a Spark client and access the spark-client directory:

cd /usr/hdp/current/spark-client

su spark

Run the Apache Spark Pi job in yarn-client mode, using code from org.apache.spark:

./bin/spark-submit --class org.apache.spark.examples.SparkPi --master yarn-client --num-executors 1 --driver-memory 512m --executor-memory 512m --executor-cores 1 lib/spark-examples*.jar 10


2. from root of HDP sandbox
su spark 
./bin/spark-shell 

scala> val parqfile = sqlContext.read.parquet("hdfs:///user/shong/NZZ/nzzlive_2016-09-01.parquet")


===========================================================================
3. How to put jar file into Spark through HDP Sandbox 
   Using SSH, transfer the file from host machine (my machine) to HDP root
===========================================================================
(3.1 First, from MINGW64)
shong@ZUR-SHONG MINGW64 ~/IdeaProjects/HelloWorld/out/artifacts/helloworld_jar
$ scp -P 2222 helloworld.jar root@127.0.0.1:/root
root@127.0.0.1's password: (soojunghong) 
helloworld.jar

(3.2 putty to 127.0.0.1:2222 using root and password 'soojunghong') 
[root@sandbox ~]# ls
anaconda-ks.cfg  hdp             install.log                  sandbox.info
blueprint.json   hello           install.log.syslog           start_ambari.sh
build.out        helloworld.jar  nzz-algorithms_2.10-1.0.jar  start_hbase.sh
derby.log        Hortonworks     nzz-algorithms.jar
[root@sandbox ~]# cp helloworld.jar /usr/hdp/current/spark-client/
cp: overwrite `/usr/hdp/current/spark-client/helloworld.jar'? y

(3.3 locate to spark from root to spark-client) 
root@sandbox#cd /usr/hdp/current/spark-client
root@sandbox spark-client#su spark
spark@sandbox spark-client$
[spark@sandbox spark-client]$ ./bin/spark-submit --class com.helloworld.Hello --num-executors 3 --driver-memory 512m --executor-memory 512m --executor-cores 1 helloworld.jar



==================================
 Error : Invalid signature file 
 =================================
[spark@sandbox spark-client]$ ./bin/spark-submit --class ParquetExercise parquetexercise.jar                Exception in thread "main" java.lang.SecurityException: Invalid signature file digest for Manifest main attributes


[root@sandbox spark-client]# zip -d parquetexercise.jar META-INF/*.RSA META-INF/*.DSA META-INF/*.SF
deleting: META-INF/DUMMY.SF
deleting: META-INF/DUMMY.DSA
deleting: META-INF/ECLIPSEF.SF
deleting: META-INF/ECLIPSEF.RSA


===========================
 Path where jar is located 
===========================
- if you browse Ambari browser, the jar file is located in hdfs:///user/spark/parquetexercise.jar
- in this path, parquet file should be place. 
